// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Alias: apple => [iosArm64, iosSimulatorArm64, iosX64, macosArm64, macosX64, tvosArm64, tvosSimulatorArm64, tvosX64, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.russhwolf:multiplatform-settings>
open annotation class com.russhwolf.settings/ExperimentalSettingsApi : kotlin/Annotation { // com.russhwolf.settings/ExperimentalSettingsApi|null[0]
    constructor <init>() // com.russhwolf.settings/ExperimentalSettingsApi.<init>|<init>(){}[0]
}

open annotation class com.russhwolf.settings/ExperimentalSettingsImplementation : kotlin/Annotation { // com.russhwolf.settings/ExperimentalSettingsImplementation|null[0]
    constructor <init>() // com.russhwolf.settings/ExperimentalSettingsImplementation.<init>|<init>(){}[0]
}

abstract interface com.russhwolf.settings/ObservableSettings : com.russhwolf.settings/Settings { // com.russhwolf.settings/ObservableSettings|null[0]
    abstract fun addBooleanListener(kotlin/String, kotlin/Boolean, kotlin/Function1<kotlin/Boolean, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addBooleanListener|addBooleanListener(kotlin.String;kotlin.Boolean;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
    abstract fun addBooleanOrNullListener(kotlin/String, kotlin/Function1<kotlin/Boolean?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addBooleanOrNullListener|addBooleanOrNullListener(kotlin.String;kotlin.Function1<kotlin.Boolean?,kotlin.Unit>){}[0]
    abstract fun addDoubleListener(kotlin/String, kotlin/Double, kotlin/Function1<kotlin/Double, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addDoubleListener|addDoubleListener(kotlin.String;kotlin.Double;kotlin.Function1<kotlin.Double,kotlin.Unit>){}[0]
    abstract fun addDoubleOrNullListener(kotlin/String, kotlin/Function1<kotlin/Double?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addDoubleOrNullListener|addDoubleOrNullListener(kotlin.String;kotlin.Function1<kotlin.Double?,kotlin.Unit>){}[0]
    abstract fun addFloatListener(kotlin/String, kotlin/Float, kotlin/Function1<kotlin/Float, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addFloatListener|addFloatListener(kotlin.String;kotlin.Float;kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    abstract fun addFloatOrNullListener(kotlin/String, kotlin/Function1<kotlin/Float?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addFloatOrNullListener|addFloatOrNullListener(kotlin.String;kotlin.Function1<kotlin.Float?,kotlin.Unit>){}[0]
    abstract fun addIntListener(kotlin/String, kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addIntListener|addIntListener(kotlin.String;kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    abstract fun addIntOrNullListener(kotlin/String, kotlin/Function1<kotlin/Int?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addIntOrNullListener|addIntOrNullListener(kotlin.String;kotlin.Function1<kotlin.Int?,kotlin.Unit>){}[0]
    abstract fun addLongListener(kotlin/String, kotlin/Long, kotlin/Function1<kotlin/Long, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addLongListener|addLongListener(kotlin.String;kotlin.Long;kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    abstract fun addLongOrNullListener(kotlin/String, kotlin/Function1<kotlin/Long?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addLongOrNullListener|addLongOrNullListener(kotlin.String;kotlin.Function1<kotlin.Long?,kotlin.Unit>){}[0]
    abstract fun addStringListener(kotlin/String, kotlin/String, kotlin/Function1<kotlin/String, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addStringListener|addStringListener(kotlin.String;kotlin.String;kotlin.Function1<kotlin.String,kotlin.Unit>){}[0]
    abstract fun addStringOrNullListener(kotlin/String, kotlin/Function1<kotlin/String?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/ObservableSettings.addStringOrNullListener|addStringOrNullListener(kotlin.String;kotlin.Function1<kotlin.String?,kotlin.Unit>){}[0]
}

abstract interface com.russhwolf.settings/Settings { // com.russhwolf.settings/Settings|null[0]
    abstract val keys // com.russhwolf.settings/Settings.keys|{}keys[0]
        abstract fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/Settings.keys.<get-keys>|<get-keys>(){}[0]
    abstract val size // com.russhwolf.settings/Settings.size|{}size[0]
        abstract fun <get-size>(): kotlin/Int // com.russhwolf.settings/Settings.size.<get-size>|<get-size>(){}[0]

    abstract fun clear() // com.russhwolf.settings/Settings.clear|clear(){}[0]
    abstract fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/Settings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    abstract fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/Settings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    abstract fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/Settings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    abstract fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/Settings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    abstract fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/Settings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    abstract fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/Settings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    abstract fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/Settings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    abstract fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/Settings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    abstract fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/Settings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    abstract fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/Settings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    abstract fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/Settings.getString|getString(kotlin.String;kotlin.String){}[0]
    abstract fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/Settings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    abstract fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/Settings.hasKey|hasKey(kotlin.String){}[0]
    abstract fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/Settings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    abstract fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/Settings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    abstract fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/Settings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    abstract fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/Settings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    abstract fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/Settings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    abstract fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/Settings.putString|putString(kotlin.String;kotlin.String){}[0]
    abstract fun remove(kotlin/String) // com.russhwolf.settings/Settings.remove|remove(kotlin.String){}[0]

    abstract interface Factory { // com.russhwolf.settings/Settings.Factory|null[0]
        abstract fun create(kotlin/String? = ...): com.russhwolf.settings/Settings // com.russhwolf.settings/Settings.Factory.create|create(kotlin.String?){}[0]
    }

    final object Companion // com.russhwolf.settings/Settings.Companion|null[0]
}

abstract interface com.russhwolf.settings/SettingsListener { // com.russhwolf.settings/SettingsListener|null[0]
    abstract fun deactivate() // com.russhwolf.settings/SettingsListener.deactivate|deactivate(){}[0]
}

final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/boolean(kotlin/String? = ..., kotlin/Boolean): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Boolean> // com.russhwolf.settings/boolean|boolean@com.russhwolf.settings.Settings(kotlin.String?;kotlin.Boolean){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/double(kotlin/String? = ..., kotlin/Double): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Double> // com.russhwolf.settings/double|double@com.russhwolf.settings.Settings(kotlin.String?;kotlin.Double){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/float(kotlin/String? = ..., kotlin/Float): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Float> // com.russhwolf.settings/float|float@com.russhwolf.settings.Settings(kotlin.String?;kotlin.Float){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/int(kotlin/String? = ..., kotlin/Int): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Int> // com.russhwolf.settings/int|int@com.russhwolf.settings.Settings(kotlin.String?;kotlin.Int){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/long(kotlin/String? = ..., kotlin/Long): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Long> // com.russhwolf.settings/long|long@com.russhwolf.settings.Settings(kotlin.String?;kotlin.Long){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableBoolean(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Boolean?> // com.russhwolf.settings/nullableBoolean|nullableBoolean@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableDouble(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Double?> // com.russhwolf.settings/nullableDouble|nullableDouble@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableFloat(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Float?> // com.russhwolf.settings/nullableFloat|nullableFloat@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableInt(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Int?> // com.russhwolf.settings/nullableInt|nullableInt@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableLong(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/Long?> // com.russhwolf.settings/nullableLong|nullableLong@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/nullableString(kotlin/String? = ...): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/String?> // com.russhwolf.settings/nullableString|nullableString@com.russhwolf.settings.Settings(kotlin.String?){}[0]
final fun (com.russhwolf.settings/Settings).com.russhwolf.settings/string(kotlin/String? = ..., kotlin/String): kotlin.properties/ReadWriteProperty<kotlin/Any?, kotlin/String> // com.russhwolf.settings/string|string@com.russhwolf.settings.Settings(kotlin.String?;kotlin.String){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/contains(kotlin/String): kotlin/Boolean // com.russhwolf.settings/contains|contains@com.russhwolf.settings.Settings(kotlin.String){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.Boolean){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.Double){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.Float){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.Int){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.Long){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String;kotlin.String){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/minusAssign(kotlin/String) // com.russhwolf.settings/minusAssign|minusAssign@com.russhwolf.settings.Settings(kotlin.String){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Boolean){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Double) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Double){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Float) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Float){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Int) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Int){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Long) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Long){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/Nothing?) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.Nothing?){}[0]
final inline fun (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, kotlin/String) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;kotlin.String){}[0]
final inline fun <#A: reified kotlin/Any> (com.russhwolf.settings/Settings).com.russhwolf.settings/get(kotlin/String): #A? // com.russhwolf.settings/get|get@com.russhwolf.settings.Settings(kotlin.String){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> (com.russhwolf.settings/Settings).com.russhwolf.settings/set(kotlin/String, #A?) // com.russhwolf.settings/set|set@com.russhwolf.settings.Settings(kotlin.String;0:0?){0§<kotlin.Any>}[0]

// Targets: [apple]
final class com.russhwolf.settings/KeychainSettings : com.russhwolf.settings/Settings { // com.russhwolf.settings/KeychainSettings|null[0]
    constructor <init>() // com.russhwolf.settings/KeychainSettings.<init>|<init>(){}[0]
    constructor <init>(kotlin/Array<out kotlin/Pair<kotlinx.cinterop/CPointer<cnames.structs/__CFString>?, kotlinx.cinterop/CPointer<out kotlinx.cinterop/CPointed>?>>...) // com.russhwolf.settings/KeychainSettings.<init>|<init>(kotlin.Array<out|kotlin.Pair<kotlinx.cinterop.CPointer<cnames.structs.__CFString>?,kotlinx.cinterop.CPointer<out|kotlinx.cinterop.CPointed>?>>...){}[0]
    constructor <init>(kotlin/String) // com.russhwolf.settings/KeychainSettings.<init>|<init>(kotlin.String){}[0]

    final val keys // com.russhwolf.settings/KeychainSettings.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/KeychainSettings.keys.<get-keys>|<get-keys>(){}[0]
    final val size // com.russhwolf.settings/KeychainSettings.size|{}size[0]
        final fun <get-size>(): kotlin/Int // com.russhwolf.settings/KeychainSettings.size.<get-size>|<get-size>(){}[0]

    final fun clear() // com.russhwolf.settings/KeychainSettings.clear|clear(){}[0]
    final fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/KeychainSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/KeychainSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    final fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/KeychainSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    final fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/KeychainSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    final fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/KeychainSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    final fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/KeychainSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    final fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/KeychainSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    final fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/KeychainSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    final fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/KeychainSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    final fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/KeychainSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    final fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/KeychainSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    final fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/KeychainSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    final fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/KeychainSettings.hasKey|hasKey(kotlin.String){}[0]
    final fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/KeychainSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/KeychainSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    final fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/KeychainSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    final fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/KeychainSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    final fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/KeychainSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    final fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/KeychainSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    final fun remove(kotlin/String) // com.russhwolf.settings/KeychainSettings.remove|remove(kotlin.String){}[0]

    final class Factory : com.russhwolf.settings/Settings.Factory { // com.russhwolf.settings/KeychainSettings.Factory|null[0]
        constructor <init>() // com.russhwolf.settings/KeychainSettings.Factory.<init>|<init>(){}[0]

        final fun create(kotlin/String?): com.russhwolf.settings/KeychainSettings // com.russhwolf.settings/KeychainSettings.Factory.create|create(kotlin.String?){}[0]
    }
}

// Targets: [apple]
final class com.russhwolf.settings/NSUserDefaultsSettings : com.russhwolf.settings/ObservableSettings { // com.russhwolf.settings/NSUserDefaultsSettings|null[0]
    constructor <init>(platform.Foundation/NSUserDefaults) // com.russhwolf.settings/NSUserDefaultsSettings.<init>|<init>(platform.Foundation.NSUserDefaults){}[0]

    final val keys // com.russhwolf.settings/NSUserDefaultsSettings.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/NSUserDefaultsSettings.keys.<get-keys>|<get-keys>(){}[0]
    final val size // com.russhwolf.settings/NSUserDefaultsSettings.size|{}size[0]
        final fun <get-size>(): kotlin/Int // com.russhwolf.settings/NSUserDefaultsSettings.size.<get-size>|<get-size>(){}[0]

    final fun addBooleanListener(kotlin/String, kotlin/Boolean, kotlin/Function1<kotlin/Boolean, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addBooleanListener|addBooleanListener(kotlin.String;kotlin.Boolean;kotlin.Function1<kotlin.Boolean,kotlin.Unit>){}[0]
    final fun addBooleanOrNullListener(kotlin/String, kotlin/Function1<kotlin/Boolean?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addBooleanOrNullListener|addBooleanOrNullListener(kotlin.String;kotlin.Function1<kotlin.Boolean?,kotlin.Unit>){}[0]
    final fun addDoubleListener(kotlin/String, kotlin/Double, kotlin/Function1<kotlin/Double, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addDoubleListener|addDoubleListener(kotlin.String;kotlin.Double;kotlin.Function1<kotlin.Double,kotlin.Unit>){}[0]
    final fun addDoubleOrNullListener(kotlin/String, kotlin/Function1<kotlin/Double?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addDoubleOrNullListener|addDoubleOrNullListener(kotlin.String;kotlin.Function1<kotlin.Double?,kotlin.Unit>){}[0]
    final fun addFloatListener(kotlin/String, kotlin/Float, kotlin/Function1<kotlin/Float, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addFloatListener|addFloatListener(kotlin.String;kotlin.Float;kotlin.Function1<kotlin.Float,kotlin.Unit>){}[0]
    final fun addFloatOrNullListener(kotlin/String, kotlin/Function1<kotlin/Float?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addFloatOrNullListener|addFloatOrNullListener(kotlin.String;kotlin.Function1<kotlin.Float?,kotlin.Unit>){}[0]
    final fun addIntListener(kotlin/String, kotlin/Int, kotlin/Function1<kotlin/Int, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addIntListener|addIntListener(kotlin.String;kotlin.Int;kotlin.Function1<kotlin.Int,kotlin.Unit>){}[0]
    final fun addIntOrNullListener(kotlin/String, kotlin/Function1<kotlin/Int?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addIntOrNullListener|addIntOrNullListener(kotlin.String;kotlin.Function1<kotlin.Int?,kotlin.Unit>){}[0]
    final fun addLongListener(kotlin/String, kotlin/Long, kotlin/Function1<kotlin/Long, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addLongListener|addLongListener(kotlin.String;kotlin.Long;kotlin.Function1<kotlin.Long,kotlin.Unit>){}[0]
    final fun addLongOrNullListener(kotlin/String, kotlin/Function1<kotlin/Long?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addLongOrNullListener|addLongOrNullListener(kotlin.String;kotlin.Function1<kotlin.Long?,kotlin.Unit>){}[0]
    final fun addStringListener(kotlin/String, kotlin/String, kotlin/Function1<kotlin/String, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addStringListener|addStringListener(kotlin.String;kotlin.String;kotlin.Function1<kotlin.String,kotlin.Unit>){}[0]
    final fun addStringOrNullListener(kotlin/String, kotlin/Function1<kotlin/String?, kotlin/Unit>): com.russhwolf.settings/SettingsListener // com.russhwolf.settings/NSUserDefaultsSettings.addStringOrNullListener|addStringOrNullListener(kotlin.String;kotlin.Function1<kotlin.String?,kotlin.Unit>){}[0]
    final fun clear() // com.russhwolf.settings/NSUserDefaultsSettings.clear|clear(){}[0]
    final fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/NSUserDefaultsSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/NSUserDefaultsSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    final fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/NSUserDefaultsSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    final fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/NSUserDefaultsSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    final fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/NSUserDefaultsSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    final fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/NSUserDefaultsSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    final fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/NSUserDefaultsSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    final fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/NSUserDefaultsSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    final fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/NSUserDefaultsSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    final fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/NSUserDefaultsSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    final fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/NSUserDefaultsSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    final fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/NSUserDefaultsSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    final fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/NSUserDefaultsSettings.hasKey|hasKey(kotlin.String){}[0]
    final fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/NSUserDefaultsSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/NSUserDefaultsSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    final fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/NSUserDefaultsSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    final fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/NSUserDefaultsSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    final fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/NSUserDefaultsSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    final fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/NSUserDefaultsSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    final fun remove(kotlin/String) // com.russhwolf.settings/NSUserDefaultsSettings.remove|remove(kotlin.String){}[0]

    final class Factory : com.russhwolf.settings/Settings.Factory { // com.russhwolf.settings/NSUserDefaultsSettings.Factory|null[0]
        constructor <init>() // com.russhwolf.settings/NSUserDefaultsSettings.Factory.<init>|<init>(){}[0]

        final fun create(kotlin/String?): com.russhwolf.settings/NSUserDefaultsSettings // com.russhwolf.settings/NSUserDefaultsSettings.Factory.create|create(kotlin.String?){}[0]
    }

    final class Listener : com.russhwolf.settings/SettingsListener { // com.russhwolf.settings/NSUserDefaultsSettings.Listener|null[0]
        final fun deactivate() // com.russhwolf.settings/NSUserDefaultsSettings.Listener.deactivate|deactivate(){}[0]
    }
}

// Targets: [js, wasmJs]
final class com.russhwolf.settings/StorageSettings : com.russhwolf.settings/Settings { // com.russhwolf.settings/StorageSettings|null[0]
    constructor <init>(org.w3c.dom/Storage = ...) // com.russhwolf.settings/StorageSettings.<init>|<init>(org.w3c.dom.Storage){}[0]

    final val keys // com.russhwolf.settings/StorageSettings.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/StorageSettings.keys.<get-keys>|<get-keys>(){}[0]
    final val size // com.russhwolf.settings/StorageSettings.size|{}size[0]
        final fun <get-size>(): kotlin/Int // com.russhwolf.settings/StorageSettings.size.<get-size>|<get-size>(){}[0]

    final fun clear() // com.russhwolf.settings/StorageSettings.clear|clear(){}[0]
    final fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/StorageSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/StorageSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    final fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/StorageSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    final fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/StorageSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    final fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/StorageSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    final fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/StorageSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    final fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/StorageSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    final fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/StorageSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    final fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/StorageSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    final fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/StorageSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    final fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/StorageSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    final fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/StorageSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    final fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/StorageSettings.hasKey|hasKey(kotlin.String){}[0]
    final fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/StorageSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/StorageSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    final fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/StorageSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    final fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/StorageSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    final fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/StorageSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    final fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/StorageSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    final fun remove(kotlin/String) // com.russhwolf.settings/StorageSettings.remove|remove(kotlin.String){}[0]
}

// Targets: [linuxX64]
final class com.russhwolf.settings/LmdbSettings : com.russhwolf.settings/Settings { // com.russhwolf.settings/LmdbSettings|null[0]
    constructor <init>(kotlin/String) // com.russhwolf.settings/LmdbSettings.<init>|<init>(kotlin.String){}[0]

    final val keys // com.russhwolf.settings/LmdbSettings.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/LmdbSettings.keys.<get-keys>|<get-keys>(){}[0]
    final val size // com.russhwolf.settings/LmdbSettings.size|{}size[0]
        final fun <get-size>(): kotlin/Int // com.russhwolf.settings/LmdbSettings.size.<get-size>|<get-size>(){}[0]

    final fun clear() // com.russhwolf.settings/LmdbSettings.clear|clear(){}[0]
    final fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/LmdbSettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/LmdbSettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    final fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/LmdbSettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    final fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/LmdbSettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    final fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/LmdbSettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    final fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/LmdbSettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    final fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/LmdbSettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    final fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/LmdbSettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    final fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/LmdbSettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    final fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/LmdbSettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    final fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/LmdbSettings.getString|getString(kotlin.String;kotlin.String){}[0]
    final fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/LmdbSettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    final fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/LmdbSettings.hasKey|hasKey(kotlin.String){}[0]
    final fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/LmdbSettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/LmdbSettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    final fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/LmdbSettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    final fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/LmdbSettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    final fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/LmdbSettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    final fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/LmdbSettings.putString|putString(kotlin.String;kotlin.String){}[0]
    final fun remove(kotlin/String) // com.russhwolf.settings/LmdbSettings.remove|remove(kotlin.String){}[0]
}

// Targets: [mingwX64]
final class com.russhwolf.settings/RegistrySettings : com.russhwolf.settings/Settings { // com.russhwolf.settings/RegistrySettings|null[0]
    constructor <init>(kotlin/String) // com.russhwolf.settings/RegistrySettings.<init>|<init>(kotlin.String){}[0]

    final val keys // com.russhwolf.settings/RegistrySettings.keys|{}keys[0]
        final fun <get-keys>(): kotlin.collections/Set<kotlin/String> // com.russhwolf.settings/RegistrySettings.keys.<get-keys>|<get-keys>(){}[0]
    final val size // com.russhwolf.settings/RegistrySettings.size|{}size[0]
        final fun <get-size>(): kotlin/Int // com.russhwolf.settings/RegistrySettings.size.<get-size>|<get-size>(){}[0]

    final fun clear() // com.russhwolf.settings/RegistrySettings.clear|clear(){}[0]
    final fun getBoolean(kotlin/String, kotlin/Boolean): kotlin/Boolean // com.russhwolf.settings/RegistrySettings.getBoolean|getBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun getBooleanOrNull(kotlin/String): kotlin/Boolean? // com.russhwolf.settings/RegistrySettings.getBooleanOrNull|getBooleanOrNull(kotlin.String){}[0]
    final fun getDouble(kotlin/String, kotlin/Double): kotlin/Double // com.russhwolf.settings/RegistrySettings.getDouble|getDouble(kotlin.String;kotlin.Double){}[0]
    final fun getDoubleOrNull(kotlin/String): kotlin/Double? // com.russhwolf.settings/RegistrySettings.getDoubleOrNull|getDoubleOrNull(kotlin.String){}[0]
    final fun getFloat(kotlin/String, kotlin/Float): kotlin/Float // com.russhwolf.settings/RegistrySettings.getFloat|getFloat(kotlin.String;kotlin.Float){}[0]
    final fun getFloatOrNull(kotlin/String): kotlin/Float? // com.russhwolf.settings/RegistrySettings.getFloatOrNull|getFloatOrNull(kotlin.String){}[0]
    final fun getInt(kotlin/String, kotlin/Int): kotlin/Int // com.russhwolf.settings/RegistrySettings.getInt|getInt(kotlin.String;kotlin.Int){}[0]
    final fun getIntOrNull(kotlin/String): kotlin/Int? // com.russhwolf.settings/RegistrySettings.getIntOrNull|getIntOrNull(kotlin.String){}[0]
    final fun getLong(kotlin/String, kotlin/Long): kotlin/Long // com.russhwolf.settings/RegistrySettings.getLong|getLong(kotlin.String;kotlin.Long){}[0]
    final fun getLongOrNull(kotlin/String): kotlin/Long? // com.russhwolf.settings/RegistrySettings.getLongOrNull|getLongOrNull(kotlin.String){}[0]
    final fun getString(kotlin/String, kotlin/String): kotlin/String // com.russhwolf.settings/RegistrySettings.getString|getString(kotlin.String;kotlin.String){}[0]
    final fun getStringOrNull(kotlin/String): kotlin/String? // com.russhwolf.settings/RegistrySettings.getStringOrNull|getStringOrNull(kotlin.String){}[0]
    final fun hasKey(kotlin/String): kotlin/Boolean // com.russhwolf.settings/RegistrySettings.hasKey|hasKey(kotlin.String){}[0]
    final fun putBoolean(kotlin/String, kotlin/Boolean) // com.russhwolf.settings/RegistrySettings.putBoolean|putBoolean(kotlin.String;kotlin.Boolean){}[0]
    final fun putDouble(kotlin/String, kotlin/Double) // com.russhwolf.settings/RegistrySettings.putDouble|putDouble(kotlin.String;kotlin.Double){}[0]
    final fun putFloat(kotlin/String, kotlin/Float) // com.russhwolf.settings/RegistrySettings.putFloat|putFloat(kotlin.String;kotlin.Float){}[0]
    final fun putInt(kotlin/String, kotlin/Int) // com.russhwolf.settings/RegistrySettings.putInt|putInt(kotlin.String;kotlin.Int){}[0]
    final fun putLong(kotlin/String, kotlin/Long) // com.russhwolf.settings/RegistrySettings.putLong|putLong(kotlin.String;kotlin.Long){}[0]
    final fun putString(kotlin/String, kotlin/String) // com.russhwolf.settings/RegistrySettings.putString|putString(kotlin.String;kotlin.String){}[0]
    final fun remove(kotlin/String) // com.russhwolf.settings/RegistrySettings.remove|remove(kotlin.String){}[0]

    final class Factory : com.russhwolf.settings/Settings.Factory { // com.russhwolf.settings/RegistrySettings.Factory|null[0]
        constructor <init>(kotlin/String) // com.russhwolf.settings/RegistrySettings.Factory.<init>|<init>(kotlin.String){}[0]

        final fun create(kotlin/String?): com.russhwolf.settings/RegistrySettings // com.russhwolf.settings/RegistrySettings.Factory.create|create(kotlin.String?){}[0]
    }
}
