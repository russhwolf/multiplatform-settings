/*
 * Copyright 2019 Russell Wolf
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless mrequired by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Install Mocha via npm 
task installDependenciesMochaNode(type: NpmTask, dependsOn: [npmInstall]) {
    args = ['install',
            "mocha@6.1.3",
            "source-map-support@0.5.12",
            "mock-local-storage@1.1.8"]
}

// Find kotlin targets that are tests for JS platform and set them up with Mocha
kotlin.targets.matching { it.platformType.name == 'js' }.all { target ->
    def testCompilation = target.compilations["test"]
    def mainCompilation = target.compilations["main"]

    def testCompilationTask = tasks[testCompilation.compileKotlinTaskName]
    def mainCompilationTask = tasks[mainCompilation.compileKotlinTaskName]
    def targetName = target.name

    // Combine all required compilation results in the node_modules folder
    // - main compilation result (compileKotlinJs)
    // - all runtime dependencies of test sourceset
    def dependenciesTask = task("${targetName}TestDependencies",
            type: Sync,
            group: 'build',
            description: "Installs Node dependencies for 'test' compilation of target '${targetName}'",
            dependsOn: [mainCompilationTask]) {
        from mainCompilationTask.destinationDir
        into "$node.nodeModulesDir/node_modules"

        def configuration = testCompilation.runtimeDependencyFiles
        from(files {
            configuration.collect { File file ->
                file.name.endsWith(".jar") ?
                        zipTree(file.absolutePath).matching {
                            include '*.js'
                            include '*.js.map'
                        } :
                        files()
            }
        }.builtBy(configuration))
    }

    npmInstall.dependsOn dependenciesTask

    // Run mocha with node
    def mochaTask = task("mocha${targetName.capitalize()}Test",
            group: 'verification',
            description: "Runs tests with Mocha for 'test' compilation of target '${targetName}'",
            type: NodeTask,
            dependsOn: [testCompilationTask, installDependenciesMochaNode]) {
        script = file("$node.nodeModulesDir/node_modules/mocha/bin/mocha")
        args = [testCompilationTask.outputFile,
                '--require', 'source-map-support/register',
                '--require', 'mock-local-storage']
    }

    tasks["${targetName}Test"].dependsOn mochaTask
}

